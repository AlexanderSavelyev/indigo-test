/****************************************************************************
 * Copyright (C) 2009-2015 EPAM Systems
 * 
 * This file is part of Indigo toolkit.
 * 
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 3 as published by the Free Software
 * Foundation and appearing in the file LICENSE.GPL included in the
 * packaging of this file.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ***************************************************************************/

#include "molecule/molecule_ionize.h"
#include "molecule/base_molecule.h"
#include "molecule/elements.h"
#include "molecule/molecule.h"
#include "molecule/smiles_loader.h"
#include "molecule/molfile_loader.h"
#include "base_cpp/scanner.h"
#include "molecule/query_molecule.h"
#include "molecule/molecule_substructure_matcher.h"
#include "base_cpp/output.h"
#include "molecule/sdf_loader.h"

using namespace indigo;


MoleculePkaModel MoleculePkaModel::_model;

IMPL_ERROR(MoleculePkaModel, "Molecule Pka Model");

MoleculePkaModel::MoleculePkaModel ()
{
   _loadSimplePkaModel();
   _loadAdvancedPkaModel();
/*
   build_pKa (0);
   build_pKa (1);
   build_pKa (2);
*/
}

void MoleculePkaModel::estimate_pKa (Molecule &mol, const IonizeOptions &options, Array<int> &acid_sites,
                      Array<int> &basic_sites, Array<float> &acid_pkas, Array<float> &basic_pkas)
{
   if (options.model == IonizeOptions::PKA_MODEL_SIMPLE)
   {
      _estimate_pKa_Simple(mol, options, acid_sites, basic_sites, acid_pkas, basic_pkas);
   }
   else if (options.model == IonizeOptions::PKA_MODEL_ADVANCED)
   {
      _estimate_pKa_Advanced(mol, options, acid_sites, basic_sites, acid_pkas, basic_pkas);
   }
   else
      throw Error("Unsupported pKa model: %d", options.model);
}

void MoleculePkaModel::build_pKa (int level)
{
   FileScanner scanner("../../tests/std.yp/PkaModel.sdf");
   SdfLoader loader(scanner);
   Array<char> fp;
   RedBlackStringMap<int> unique_fps;
   AromaticityOptions opts;

   Molecule mol;

   int cnt = 0;

   while (!loader.isEOF())
   {
      loader.readNext();
      BufferScanner scanner(loader.data);
      MolfileLoader mol_loader(scanner);
      mol_loader.stereochemistry_options.ignore_errors = true;
      mol_loader.loadMolecule(mol);

      mol.aromatize(opts);

      for (auto i : mol.vertices())
      {
         fp.clear();
         getAtomLocalFingerprint (mol, i, fp, level);
         if (fp.size() == 0)
            continue;

         int *ptr = unique_fps.at2(fp.ptr());
         if (!ptr)
         {
            cnt++;
            unique_fps.insert(fp.ptr(), cnt);

            int a_lone = 0;
            mol.getVacantPiOrbitals(i, &a_lone);
            int a_hcnt = mol.getAtomTotalH(i);

            if (a_hcnt > 0)
               printf("{PKA_ACID, \"%s\", },\n", fp.ptr());
            if (a_lone > 0)
               printf("{PKA_BASIC, \"%s\", },\n", fp.ptr());

//            printf("{PKA_SHIFT, \"%s\", },\n", fp.ptr());
         }
      }
   }
}


void MoleculePkaModel::_loadSimplePkaModel()
{
   struct _PkaDef
   {
      const char *acid;
      float pka;
      const char *basic;
   };

   /*  Roger Sayle, Physiological ionization and pKa prediction,
   *   http://www.daylight.com/meetings/emug00/Sayle/pkapredict.html
   */
   static _PkaDef simple_pka_model[] = 
   {
      {"[F;!H0]", 3.18f, "[F-]"},
      {"[Cl;!H0]", -6.50f, "[Cl-]"},
      {"[Br;!H0]", -8.50f, "[Br-]"},
      {"[I;!H0]", -9.00f, "[I-]"},
      {"[c;!H0]", 43.00f, "[c-]"},
      {"[$([C]#N);!H0]", 9.30f, "[$([C-]#N)]"},
      {"[C;!H0]", 50.00f, "[C-]"},
      {"[nH;!H0]", 16.50f, "[n-]"},
      {"[$([N]=N=*);!H0]", -99.99f, "[$([N-]=N=*)]"},
      {"[$([N]C=O);!H0]", 22.00f, "[$([N-]C=O)]"},
      {"[$([N]S(=O)=O);!H0]", 10.10f, "[$([N-]S(=O)=O)]"},
      {"[N;!H0]", 32.50f, "[N-]"},
      {"[nH2+;!H0]", -3.80f, "[nH]"}, 
      {"[nH+;!H0]", 5.23f, "[n]"},
      {"[$([NH+]#*);!H0]", -12.00f, "[$([N]#*)]"},
      {"[$([NH+]=C(N)N);!H0]", 14.4f, "[$([N]=C(N)N)]"},
      {"[$([NH+]=C(N)a);!H0]", 11.6f, "[$([N]=C(N)a)]"},
      {"[$([NH+]=CN);!H0]", 12.4f, "[$([N]=CN)]"},
      {"[$([NH+]=*);!H0]", -99.99f, "[$([N]=*)]"},
      {"[$([NH+]a);!H0]", 4.69f, "[$([N]a)]"},
      {"[$([NH+]C=O);!H0]", 4.74f, "[$([N]C=O)]"},
      {"[$([NH+]C=N);!H0]", -99.99f, "[$([N]C=N)]"},
      {"[$([NH+]S(=O)=O);!H0]", -99.99f, "[$([N]S(=O)=O)]"},
      {"[NH+;!H0]", 10.5f, "[N]"},
      {"[NH2+;!H0]", 11.1f, "[$([N](C)C)]"},
      {"[NH3+;!H0]", 10.6f, "[NH2]"},
      {"[NH4+;!H0]", 9.25f, "[NH3]"},
      {"[OH2;!H0]", 15.70f, "[OH-]"},
      {"[$([O]c);!H0]", 10.00f, "[O-]a"},
      {"[$([O]C(=O)[O-]);!H0]", 10.33f, "[$([O-]C(=O)[O-])]"},
      {"[$([O]C(=O)a);!H0]", 4.20f, "[$([O-]C(=O)a)]"},
      {"[$([O]C=O);!H0]", 4.80f, "[$([O-]C=O)]"},
      {"[$([O]C);!H0]", 15.50f, "[$([O-]C)]"},
      {"[$([O]N(=O)=O);!H0]", -1.40f, "[$([O-]N(=O)=O)]"},
      {"[$([O][N+]=O);!H0]", -12.00f, "[$([O-][N+]=O)]"},
      {"[$([O]NC=O);!H0]", 9.40f, "[$([O-]NC=O)]"},
      {"[$([O]N=*);!H0]", 12.34f, "[$([O-]N=*)]"},
      {"[$([O]N(*)*);!H0]", 5.2f, "[$([O-]N(*)*)]"},
      {"[$([O]N);!H0]", 5.96f, "[$([O-]N)]"},
      {"[$([O]P([O-])([O-]));!H0]", 12.50f, "[$([O-]P([O-])([O-]))]"},
      {"[$([O]P([O-])=O);!H0]", 6.70f, "[$([O-]P([O-])=O)]"},
      {"[$([O]P=O);!H0]", 2.00f, "[$([O-]P=O)]"},
      {"[$([O]P[O-]);!H0]", 99.99f, "[$([O-]P[O-])]"},
      {"[$([O]Pa);!H0]", 2.10f, "[$([O-]Pa)]"},
      {"[$([O]P);!H0]", 3.08f, "[$([O-]P)]"},
      {"[$([O]S(=O)(=O)[O-]);!H0]", 2.0f, "[$([O-]S(=O)(=O)[O-])]"},
      {"[$([O]S(=O)(=O));!H0]", -99.99f, "[$([O-]S(=O)(=O))]"},
      {"[$([O]S(=O)[O-]);!H0]", 7.20f, "[$([O-]S(=O)[O-])]"},
      {"[$([O]S(=O));!H0]", 1.80f, "[$([O-]S(=O))]"},
      {"[O;!H0]", 99.99f, "[O-]"},
      {"[OH+;!H0]", -1.74f, "[O]"},
      {"[P;!H0]", 29.00f, "[P-]"},
      {"[P+;!H0]", -13.00f, "[P]"},
      {"[$([S]*=O);!H0]", 3.52f, "[$([S-]*=O)]"},
      {"[$([S]a);!H0]", 6.52f, "[$([S-]a)]"},
      {"[SH2;!H0]", 7.00f, "[SH-]"},
      {"[S;!H0]", 12.00f, "[S-]"},
      {"[SH+;!H0]", -7.00f, "[S]"},
   };

   _model.acids.clear();
   _model.basics.clear();
   _model.a_pkas.clear();
   _model.b_pkas.clear();

   for (auto i = 0; i < NELEM(simple_pka_model); i++)
   {
      BufferScanner scanner(simple_pka_model[i].acid);
      SmilesLoader loader(scanner);
      QueryMolecule &acid = _model.acids.push();
      loader.loadSMARTS(acid);
      _model.a_pkas.push(simple_pka_model[i].pka);
   }

   for (auto i = 0; i < NELEM(simple_pka_model); i++)
   {
      BufferScanner scanner(simple_pka_model[i].basic);
      SmilesLoader loader(scanner);
      QueryMolecule &basic = _model.basics.push();
      loader.loadSMARTS(basic);
      _model.b_pkas.push(simple_pka_model[i].pka);
   }
}

void MoleculePkaModel::_loadAdvancedPkaModel()
{

   enum PkaType { PKA_ACID, PKA_BASIC };

   struct _PkaDef
   {
      PkaType  type;
      const char *a_fp;
      float pka;
   };

   static _PkaDef advanced_pka_model[] = 
   {
      {PKA_ACID,  "64000101400200", 43.00f},
      {PKA_ACID,  "64000203410000", 50.00f},
      {PKA_ACID,  "64000202420000", 50.00f},
      {PKA_ACID,  "64000201430000", 50.00f},
      {PKA_ACID,  "73000212310000", 32.50f},
      {PKA_BASIC, "73000212310000", 10.50f},
      {PKA_ACID,  "73000211320000", 32.50f},
      {PKA_BASIC, "73000211320000", 10.50f},
      {PKA_ACID,  "73000211301000", 32.50f},
      {PKA_BASIC, "73000211301000",-99.99f},
      {PKA_BASIC, "73000110300200",  5.23f},
      {PKA_ACID,  "73000111300200", 16.50f},
      {PKA_BASIC, "73000111300200", -3.80f},
      {PKA_BASIC, "82000220201000", -1.74f},
      {PKA_ACID,  "82000221210000",  4.80f},
      {PKA_BASIC, "82000221210000", -1.74f},
      {PKA_BASIC, "162000220220000",-7.00f},
      {PKA_ACID,  "162000221210000",12.00f},
      {PKA_BASIC, "162000221210000",-7.00f},
/*
      {PKA_ACID, "73000212310000:1:64000201430000", 32.5f},
      {PKA_BASIC, "73000212310000:1:64000201430000", 10.66f},
      {PKA_ACID, "64000201430000:1:73000212310000:1:64000200421000:1:64000203410000", 50.0f},
      {PKA_BASIC, "82000220201000:2:64000200421000", -1.74f},
      {PKA_ACID, "82000221210000:1:64000200421000", 15.5f},
      {PKA_BASIC, "82000221210000:1:64000200421000", -1.74f},
      {PKA_ACID, "64000203410000:1:64000201430000", },
      {PKA_ACID, "64000201430000:1:73000212310000:1:64000200421000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:73000211320000", },
      {PKA_ACID, "73000211320000:1:64000202420000:1:64000200421000", },
      {PKA_BASIC, "73000211320000:1:64000202420000:1:64000200421000", },
      {PKA_ACID, "73000212310000:1:64000200421000", },
      {PKA_BASIC, "73000212310000:1:64000200421000", },
      {PKA_ACID, "73000211301000:2:64000200421000", },
      {PKA_BASIC, "73000211301000:2:64000200421000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:64000202420000:1:73000212310000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:162000221210000", },
      {PKA_ACID, "162000221210000:1:64000202420000", },
      {PKA_BASIC, "162000221210000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000200421000", },
      {PKA_ACID, "73000212310000:1:64000202420000", },
      {PKA_BASIC, "73000212310000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000200421000:1:73000212310000", },
      {PKA_ACID, "64000201430000:1:64000202420000:1:73000212310000:1:64000200421000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000100410200", },
      {PKA_ACID, "64000101400200:4:64000100410200:4:73000110300200", },
      {PKA_BASIC, "73000110300200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:73000110300200:4:73000111300200", },
      {PKA_ACID, "73000111300200:4:64000101400200:4:64000100410200", },
      {PKA_BASIC, "73000111300200:4:64000101400200:4:64000100410200", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:64000201430000:1:73000212310000", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:64000202420000:1:64000203410000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000203410000", },
      {PKA_ACID, "64000203410000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000201430000", },
      {PKA_ACID, "64000201430000:1:64000202420000:1:64000203410000:1:64000203410000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:73000212310000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:162000220220000", },
      {PKA_BASIC, "162000220220000:1:64000202420000:1:64000203410000", },
      {PKA_ACID, "64000203410000:1:162000220220000", },
      {PKA_ACID, "64000202420000:1:64000100410200:1:64000201430000", },
      {PKA_ACID, "64000101400200:4:64000100410200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000100410200", },
      {PKA_ACID, "73000211320000:1:64000201430000:1:64000202420000", },
      {PKA_BASIC, "73000211320000:1:64000201430000:1:64000202420000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:64000202420000:1:73000211320000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:82000221210000", },
      {PKA_ACID, "82000221210000:1:64000202420000", },
      {PKA_BASIC, "82000221210000:1:64000202420000", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:82000221210000:1:64000203410000", },
      {PKA_ACID, "82000221210000:1:64000201430000", },
      {PKA_BASIC, "82000221210000:1:64000201430000", },
      {PKA_ACID, "73000111300200:4:64000100400300:4:64000101400200", },
      {PKA_BASIC, "73000111300200:4:64000100400300:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:73000111300200:4:64000100410200", },
      {PKA_ACID, "64000101400200:4:64000100400300:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000100400300", },
      {PKA_ACID, "82000221210000:1:64000100410200", },
      {PKA_BASIC, "82000221210000:1:64000100410200", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:64000203410000:1:64000203410000", },

      {PKA_ACID, "73000212310000:1:64000201430000", },
      {PKA_BASIC, "73000212310000:1:64000201430000", },
      {PKA_ACID, "64000201430000:1:73000212310000:1:64000200421000:1:64000203410000", },
      {PKA_BASIC, "82000220201000:2:64000200421000", },
      {PKA_ACID, "82000221210000:1:64000200421000", },
      {PKA_BASIC, "82000221210000:1:64000200421000", },
      {PKA_ACID, "64000203410000:1:64000201430000", },
      {PKA_ACID, "64000201430000:1:73000212310000:1:64000200421000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:73000211320000", },
      {PKA_ACID, "73000211320000:1:64000202420000:1:64000200421000", },
      {PKA_BASIC, "73000211320000:1:64000202420000:1:64000200421000", },
      {PKA_ACID, "73000212310000:1:64000200421000", },
      {PKA_BASIC, "73000212310000:1:64000200421000", },
      {PKA_ACID, "73000211301000:2:64000200421000", },
      {PKA_BASIC, "73000211301000:2:64000200421000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:64000202420000:1:73000212310000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:162000221210000", },
      {PKA_ACID, "162000221210000:1:64000202420000", },
      {PKA_BASIC, "162000221210000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000200421000", },
      {PKA_ACID, "73000212310000:1:64000202420000", },
      {PKA_BASIC, "73000212310000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000200421000:1:73000212310000", },
      {PKA_ACID, "64000201430000:1:64000202420000:1:73000212310000:1:64000200421000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000100410200", },
      {PKA_ACID, "64000101400200:4:64000100410200:4:73000110300200", },
      {PKA_BASIC, "73000110300200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:73000110300200:4:73000111300200", },
      {PKA_ACID, "73000111300200:4:64000101400200:4:64000100410200", },
      {PKA_BASIC, "73000111300200:4:64000101400200:4:64000100410200", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:64000201430000:1:73000212310000", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:64000202420000:1:64000203410000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000203410000", },
      {PKA_ACID, "64000203410000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000201430000", },
      {PKA_ACID, "64000201430000:1:64000202420000:1:64000203410000:1:64000203410000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:73000212310000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:162000220220000", },
      {PKA_BASIC, "162000220220000:1:64000202420000:1:64000203410000", },
      {PKA_ACID, "64000203410000:1:162000220220000", },
      {PKA_ACID, "64000202420000:1:64000100410200:1:64000201430000", },
      {PKA_ACID, "64000101400200:4:64000100410200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000100410200", },
      {PKA_ACID, "73000211320000:1:64000201430000:1:64000202420000", },
      {PKA_BASIC, "73000211320000:1:64000201430000:1:64000202420000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:64000202420000:1:73000211320000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:82000221210000", },
      {PKA_ACID, "82000221210000:1:64000202420000", },
      {PKA_BASIC, "82000221210000:1:64000202420000", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:82000221210000:1:64000203410000", },
      {PKA_ACID, "82000221210000:1:64000201430000", },
      {PKA_BASIC, "82000221210000:1:64000201430000", },
      {PKA_ACID, "73000111300200:4:64000100400300:4:64000101400200", },
      {PKA_BASIC, "73000111300200:4:64000100400300:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:73000111300200:4:64000100410200", },
      {PKA_ACID, "64000101400200:4:64000100400300:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000100400300", },
      {PKA_ACID, "82000221210000:1:64000100410200", },
      {PKA_BASIC, "82000221210000:1:64000100410200", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:64000203410000:1:64000203410000", },
      {PKA_ACID, "73000212310000:1:64000201430000:1:73000212310000:1:64000200421000:1:64000203410000", },
      {PKA_BASIC, "73000212310000:1:64000201430000:1:73000212310000:1:64000200421000:1:64000203410000", },
      {PKA_ACID, "64000201430000:1:73000212310000:1:64000201430000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000:1:64000203410000:1:64000201430000", },
      {PKA_BASIC, "82000220201000:2:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000", },
      {PKA_ACID, "82000221210000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000", },
      {PKA_BASIC, "82000221210000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000", },
      {PKA_ACID, "64000203410000:1:64000201430000:1:73000212310000:1:64000200421000:1:64000203410000", },
      {PKA_ACID, "73000212310000:1:64000201430000:1:73000212310000:1:64000200421000:1:64000202420000", },
      {PKA_BASIC, "73000212310000:1:64000201430000:1:73000212310000:1:64000200421000:1:64000202420000", },
      {PKA_ACID, "64000201430000:1:73000212310000:1:64000201430000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000:1:64000202420000:1:64000202420000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000202420000:1:64000202420000:1:64000201430000:1:73000212310000:1:64000200421000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000202420000:1:64000201430000:1:64000202420000:1:64000202420000:1:73000211320000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000202420000:1:64000202420000:1:73000211320000:1:64000202420000:1:64000200421000", },
      {PKA_ACID, "73000211320000:1:64000202420000:1:64000202420000:1:73000211320000:1:64000200421000:1:73000211320000:1:73000212310000:2:73000211301000", },
      {PKA_BASIC, "73000211320000:1:64000202420000:1:64000202420000:1:73000211320000:1:64000200421000:1:73000211320000:1:73000212310000:2:73000211301000", },
      {PKA_ACID, "73000212310000:1:64000200421000:1:73000211320000:1:73000212310000:2:73000211301000", },
      {PKA_BASIC, "73000212310000:1:64000200421000:1:73000211320000:1:73000212310000:2:73000211301000", },
      {PKA_ACID, "73000211301000:2:64000200421000:1:73000211320000:1:73000212310000:2:73000211301000", },
      {PKA_BASIC, "73000211301000:2:64000200421000:1:73000211320000:1:73000212310000:2:73000211301000", },
      {PKA_ACID, "73000212310000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000", },
      {PKA_BASIC, "73000212310000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000:1:64000202420000:1:64000201430000:1:64000200421000:1:73000212310000:1:64000201430000", },
      {PKA_BASIC, "82000220201000:2:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000", },
      {PKA_ACID, "82000221210000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000", },
      {PKA_BASIC, "82000221210000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000:1:64000200421000:1:64000202420000:1:73000212310000:2:82000220201000", },
      {PKA_ACID, "73000212310000:1:64000200421000:1:64000202420000:1:73000212310000:2:82000220201000", },
      {PKA_BASIC, "73000212310000:1:64000200421000:1:64000202420000:1:73000212310000:2:82000220201000", },
      {PKA_BASIC, "82000220201000:2:64000200421000:1:64000202420000:1:73000212310000:2:82000220201000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000:1:64000200421000:1:64000202420000:1:82000221210000:2:82000220201000", },
      {PKA_ACID, "82000221210000:1:64000200421000:1:64000202420000:1:82000221210000:2:82000220201000", },
      {PKA_BASIC, "82000221210000:1:64000200421000:1:64000202420000:1:82000221210000:2:82000220201000", },
      {PKA_BASIC, "82000220201000:2:64000200421000:1:64000202420000:1:82000221210000:2:82000220201000", },
      {PKA_ACID, "64000201430000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000:1:64000202420000:1:64000201430000:1:162000221210000:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000:1:162000221210000:1:64000202420000", },
      {PKA_ACID, "162000221210000:1:64000202420000:1:64000201430000:1:162000221210000", },
      {PKA_BASIC, "162000221210000:1:64000202420000:1:64000201430000:1:162000221210000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:64000201430000:2:82000220201000:1:82000221210000:1:64000202420000:1:64000201430000:1:64000202420000:1:73000212310000:1:64000201430000", },
      {PKA_BASIC, "82000220201000:2:64000200421000:1:64000201430000:2:82000220201000:1:82000221210000", },
      {PKA_ACID, "82000221210000:1:64000200421000:1:64000201430000:2:82000220201000:1:82000221210000", },
      {PKA_BASIC, "82000221210000:1:64000200421000:1:64000201430000:2:82000220201000:1:82000221210000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000:1:64000202420000:1:64000202420000:1:64000200421000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000201430000:1:64000202420000:1:64000200421000:1:64000202420000:2:82000220201000:1:82000221210000", },
      {PKA_BASIC, "82000220201000:2:64000200421000:1:64000202420000:2:82000220201000:1:82000221210000", },
      {PKA_ACID, "82000221210000:1:64000200421000:1:64000202420000:2:82000220201000:1:82000221210000", },
      {PKA_BASIC, "82000221210000:1:64000200421000:1:64000202420000:2:82000220201000:1:82000221210000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000201430000:1:64000202420000:1:64000200421000:1:64000202420000:2:82000220201000:1:73000212310000", },
      {PKA_BASIC, "82000220201000:2:64000200421000:1:64000202420000:2:82000220201000:1:73000212310000", },
      {PKA_ACID, "73000212310000:1:64000200421000:1:64000202420000:2:82000220201000:1:73000212310000", },
      {PKA_BASIC, "73000212310000:1:64000200421000:1:64000202420000:2:82000220201000:1:73000212310000", },
      {PKA_ACID, "73000212310000:1:64000202420000:1:64000200421000:1:73000212310000", },
      {PKA_BASIC, "73000212310000:1:64000202420000:1:64000200421000:1:73000212310000", },
      {PKA_ACID, "64000202420000:1:64000200421000:1:64000202420000:2:82000220201000:1:82000221210000:1:73000212310000:1:64000202420000", },
      {PKA_ACID, "73000212310000:1:64000201430000:1:64000202420000:1:73000212310000:1:64000200421000", },
      {PKA_BASIC, "73000212310000:1:64000201430000:1:64000202420000:1:73000212310000:1:64000200421000", },
      {PKA_ACID, "64000201430000:1:64000202420000:1:64000201430000:1:64000100410200:1:73000212310000:1:64000201430000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000202420000:1:73000212310000:1:64000200421000:1:64000100410200:1:64000202420000:4:64000101400200:4:73000111300200", },
      {PKA_ACID, "64000101400200:4:64000100410200:1:64000202420000:4:64000101400200:4:73000111300200:4:73000110300200:4:64000101400200:4:64000101400200", },
      {PKA_BASIC, "73000110300200:4:64000101400200:4:64000100410200:4:73000110300200:4:64000101400200:4:73000110300200:4:73000111300200", },
      {PKA_ACID, "64000101400200:4:73000110300200:4:64000101400200:4:64000101400200:4:73000111300200:4:64000101400200:4:64000100410200", },
      {PKA_ACID, "73000111300200:4:64000101400200:4:73000110300200:4:73000111300200:4:64000100410200:1:64000202420000:4:64000101400200:4:73000111300200", },
      {PKA_BASIC, "73000111300200:4:64000101400200:4:73000110300200:4:73000111300200:4:64000100410200:1:64000202420000:4:64000101400200:4:73000111300200", },
      {PKA_ACID, "73000212310000:1:64000201430000:1:64000200421000:1:64000201430000:1:73000212310000", },
      {PKA_BASIC, "73000212310000:1:64000201430000:1:64000200421000:1:64000201430000:1:73000212310000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000:1:64000201430000:1:64000201430000:1:64000202420000:1:64000203410000:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:64000200421000:1:64000201430000:1:73000212310000:1:64000202420000:1:64000201430000:1:64000203410000:1:64000203410000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000201430000:1:64000202420000:1:64000203410000:1:64000203410000:1:64000202420000", },
      {PKA_ACID, "64000203410000:1:64000201430000:1:64000201430000:1:64000202420000:1:64000203410000", },
      {PKA_ACID, "64000203410000:1:64000202420000:1:64000201430000:1:64000203410000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000:1:64000202420000:1:64000201430000:1:64000201430000:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000:1:64000201430000:1:64000202420000:1:64000203410000:1:64000203410000", },
      {PKA_ACID, "64000201430000:1:64000202420000:1:64000201430000:1:64000201430000:1:64000203410000:1:64000201430000:1:64000203410000:1:64000201430000", },
      {PKA_ACID, "64000203410000:1:64000201430000:1:64000202420000:1:64000203410000:1:64000203410000", },
      {PKA_ACID, "64000201430000:1:73000212310000:1:64000201430000:1:64000200421000:1:64000201430000:2:82000220201000:1:82000221210000:1:64000202420000:1:64000201430000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:73000212310000:1:64000200421000:1:64000202420000:1:64000202420000:1:64000202420000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000201430000:1:64000202420000:1:64000202420000:1:64000202420000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000202420000:1:73000212310000:1:64000202420000:1:64000202420000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000202420000:1:64000202420000:1:73000212310000:1:64000202420000", },
      {PKA_ACID, "73000212310000:1:64000202420000:1:64000202420000:1:73000212310000", },
      {PKA_BASIC, "73000212310000:1:64000202420000:1:64000202420000:1:73000212310000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000:1:64000202420000:1:64000201430000:1:64000202420000:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000:1:64000202420000:1:64000202420000:1:162000220220000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000201430000:1:64000202420000:1:162000220220000:1:64000202420000:1:64000203410000", },
      {PKA_BASIC, "162000220220000:1:64000202420000:1:64000202420000:1:162000220220000:1:64000203410000:1:162000220220000", },
      {PKA_ACID, "64000203410000:1:162000220220000:1:64000202420000:1:64000203410000", },
      {PKA_ACID, "64000201430000:1:73000212310000:1:64000201430000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000:1:64000202420000:1:64000100410200:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000100410200:1:64000202420000:4:64000101400200:4:64000101400200:1:64000201430000:1:73000212310000:1:64000200421000:1:64000202420000", },
      {PKA_ACID, "64000101400200:4:64000100410200:1:64000202420000:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000100410200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000100410200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000100410200:1:64000202420000:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "73000211320000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000211320000:1:64000202420000:1:64000202420000:1:73000211320000", },
      {PKA_BASIC, "73000211320000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000211320000:1:64000202420000:1:64000202420000:1:73000211320000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000:1:64000202420000:1:64000201430000:1:64000202420000:1:73000211320000:1:64000201430000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000211320000:1:64000202420000:1:64000202420000:1:64000202420000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000201430000:1:64000202420000:1:64000202420000:1:64000202420000:1:73000211320000", },
      {PKA_ACID, "64000202420000:1:64000202420000:1:64000202420000:1:64000202420000:1:73000211320000:1:64000201430000:1:64000202420000", },
      {PKA_ACID, "64000201430000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000:1:64000202420000:1:64000201430000:1:82000221210000:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000:1:82000221210000:1:64000202420000", },
      {PKA_ACID, "82000221210000:1:64000202420000:1:64000201430000:1:82000221210000", },
      {PKA_BASIC, "82000221210000:1:64000202420000:1:64000201430000:1:82000221210000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000:1:64000201430000:1:64000201430000:1:82000221210000:1:64000203410000:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:64000200421000:1:64000201430000:1:73000212310000:1:82000221210000:1:64000201430000:1:64000203410000:1:64000201430000", },
      {PKA_ACID, "82000221210000:1:64000201430000:1:64000201430000:1:82000221210000:1:64000203410000", },
      {PKA_BASIC, "82000221210000:1:64000201430000:1:64000201430000:1:82000221210000:1:64000203410000", },
      {PKA_ACID, "64000203410000:1:64000201430000:1:64000201430000:1:82000221210000:1:64000203410000", },
      {PKA_ACID, "64000201430000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000:1:64000202420000:1:64000201430000:1:64000100410200:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000:1:64000100410200:4:64000101400200:1:64000202420000:4:64000100400300", },
      {PKA_ACID, "73000111300200:4:64000100400300:4:73000111300200:4:64000100400300:4:64000101400200:4:64000101400200:4:73000111300200:4:64000100410200", },
      {PKA_BASIC, "73000111300200:4:64000100400300:4:73000111300200:4:64000100400300:4:64000101400200:4:64000101400200:4:73000111300200:4:64000100410200", },
      {PKA_ACID, "64000101400200:4:73000111300200:4:64000100400300:4:64000101400200:4:64000100410200:4:64000101400200:1:64000202420000:4:64000100400300", },
      {PKA_ACID, "64000101400200:4:64000100400300:4:64000100400300:4:64000101400200:4:64000100410200:4:64000101400200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000100400300:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000100400300", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000100400300:4:73000111300200:4:64000100400300:4:64000101400200", },
      {PKA_ACID, "64000201430000:1:64000200421000:2:82000220201000:1:82000221210000:1:64000201430000:1:64000202420000:1:64000100410200:1:64000201430000:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000202420000:1:64000100410200:1:64000202420000:4:64000101400200:4:64000101400200:1:64000201430000:1:64000200421000:1:64000202420000:1:73000212310000", },
      {PKA_ACID, "64000101400200:4:64000100410200:1:64000202420000:4:64000101400200:4:64000101400200:4:64000101400200:4:64000101400200:4:64000100410200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000100410200:4:64000101400200:4:64000100410200:4:64000101400200:4:64000101400200:1:82000221210000", },
      {PKA_ACID, "64000101400200:4:64000100410200:4:64000101400200:4:64000101400200:1:82000221210000:4:64000101400200:4:64000101400200:4:64000100410200", },
      {PKA_ACID, "64000101400200:4:64000101400200:4:64000100410200:4:64000101400200:4:64000100410200:1:64000202420000:4:64000101400200:4:64000101400200", },
      {PKA_ACID, "82000221210000:1:64000100410200:4:64000101400200:4:64000101400200:1:82000221210000", },
      {PKA_BASIC, "82000221210000:1:64000100410200:4:64000101400200:4:64000101400200:1:82000221210000", },
      {PKA_ACID, "64000201430000:1:64000200421000:1:82000221210000:1:64000201430000:2:82000220201000:1:64000201430000:1:64000201430000:1:64000203410000:1:64000203410000:1:73000212310000:1:64000201430000", },
      {PKA_ACID, "64000201430000:1:64000201430000:1:64000200421000:1:64000201430000:1:73000212310000:1:64000203410000:1:64000201430000:1:64000203410000:1:64000201430000", },
      {PKA_ACID, "64000203410000:1:64000201430000:1:64000201430000:1:64000203410000:1:64000203410000", },
*/
   };

   _model.adv_a_pkas.clear();
   _model.adv_b_pkas.clear();

   for (auto i = 0; i < NELEM(advanced_pka_model); i++)
   {
      if (advanced_pka_model[i].type == PKA_ACID)
         _model.adv_a_pkas.insert(advanced_pka_model[i].a_fp, advanced_pka_model[i].pka);
      else if (advanced_pka_model[i].type == PKA_BASIC)
         _model.adv_b_pkas.insert(advanced_pka_model[i].a_fp, advanced_pka_model[i].pka);
   }
}

void MoleculePkaModel::_estimate_pKa_Simple (Molecule &mol, const IonizeOptions &options, Array<int> &acid_sites,
                      Array<int> &basic_sites, Array<float> &acid_pkas, Array<float> &basic_pkas)
{
   QS_DEF(Array<int>, ignore_atoms);
   QS_DEF(Array<int>, mapping);
   AromaticityOptions opts;
   bool _dearomatize = false;

   if (!mol.isAromatized())
   {
      if (mol.aromatize(opts))
         _dearomatize = true;
   }
   else
      _dearomatize = false;

   MoleculeSubstructureMatcher matcher(mol);
   matcher.fmcache = new MoleculeSubstructureMatcher::FragmentMatchCache;
   matcher.use_aromaticity_matcher = true;
   ignore_atoms.clear();
   for (auto i = 0; i < _model.acids.size(); i++)
   {
      matcher.setQuery(_model.acids[i]);

      for (int j = 0; j < ignore_atoms.size(); j++)
         matcher.ignoreTargetAtom(ignore_atoms[j]);

      if (!matcher.find())
         continue;

      for (;;)
      {
         mapping.clear();
         mapping.copy(matcher.getQueryMapping(), _model.acids[i].vertexEnd());
         for (int j = 0; j < mapping.size(); j++)
         {
            if (mapping[j] > -1)
            {
               acid_sites.push(mapping[j]);
               acid_pkas.push(_model.a_pkas[i]);
               ignore_atoms.push(mapping[j]);
            }  
         }
         if (!matcher.findNext())
            break;
      }
   }

   ignore_atoms.clear();
   for (auto i = 0; i < _model.basics.size(); i++)
   {
      matcher.setQuery(_model.basics[i]);

      for (int j = 0; j < ignore_atoms.size(); j++)
         matcher.ignoreTargetAtom(ignore_atoms[j]);

      if (!matcher.find())
         continue;

      for (;;)
      {
         mapping.clear();
         mapping.copy(matcher.getQueryMapping(), _model.basics[i].vertexEnd());
         for (int j = 0; j < mapping.size(); j++)
         {
            if (mapping[j] > -1)
            {
               basic_sites.push(mapping[j]);
               basic_pkas.push(_model.b_pkas[i]);
               ignore_atoms.push(mapping[j]);
            }  
         }
         if (!matcher.findNext())
            break;
      }
   }

   if (_dearomatize)
      mol.dearomatize(opts);
}

void MoleculePkaModel::_estimate_pKa_Advanced (Molecule &mol, const IonizeOptions &options, Array<int> &acid_sites,
                      Array<int> &basic_sites, Array<float> &acid_pkas, Array<float> &basic_pkas)
{
   AromaticityOptions opts;
   bool _dearomatize = false;
   int level = 0;

   if (!mol.isAromatized())
   {
      if (mol.aromatize(opts))
         _dearomatize = true;
   }
   else
      _dearomatize = false;


   for (auto i : mol.vertices())
   {
      int a_lone = 0;
      mol.getVacantPiOrbitals(i, &a_lone);
      int a_hcnt = mol.getAtomTotalH(i);

      if (a_hcnt > 0)
      {
         float a_pka = _getAcidPkaValue(mol, i, level);
         acid_sites.push(i);
         acid_pkas.push(a_pka);
      }

      if (a_lone > 0)
      {
         float b_pka = _getBasicPkaValue(mol, i, level);
         basic_sites.push(i);
         basic_pkas.push(b_pka);
      }
   }

   if (_dearomatize)
      mol.dearomatize(opts);
}

void MoleculePkaModel::getAtomLocalFingerprint (Molecule &mol, int idx, Array<char> &fp, int level)
{
   Array<char> key;
   Array<char> n_key;
   Array<char> bond;

   if (mol.isPseudoAtom(idx) || mol.isRSite(idx) || mol.isTemplateAtom(idx)) 
   {
      QS_DEF(Array<char>, a_desc);
      mol.getAtomDescription(idx, a_desc);
      throw Error("pKa model can't used with atom : %s", a_desc.ptr());
   }

   int a_num  = mol.getAtomNumber(idx);
   // Just bypass the hyfrogen atom
   if (a_num == ELEM_H)
      return;

   int a_val  = mol.getAtomValence(idx);
   int a_chg  = mol.getAtomCharge(idx);
   int a_rad  = mol.getAtomRadical(idx);
   int a_iso  = mol.getAtomIsotope(idx);
   int a_arom = mol.getAtomAromaticity(idx);
   int a_conn = mol.getAtomConnectivity(idx);

   int a_lone = 0;
   mol.getVacantPiOrbitals(idx, &a_lone);
   int a_hcnt = mol.getAtomTotalH(idx);

   int a_single_cnt = 0;
   int a_double_cnt = 0;
   int a_aromatic_cnt = 0;
   int a_triple_cnt = 0;
   int a_coord_cnt =0;

   const Vertex &vertex = mol.getVertex(idx);
   for (auto i : vertex.neighbors())
   {
      int order = mol.getBondOrder(vertex.neiEdge(i));

      if (order == BOND_SINGLE)
         a_single_cnt++;
      else if (order == BOND_DOUBLE)
         a_double_cnt++;
      else if (order == BOND_AROMATIC)
         a_aromatic_cnt++;
      else if (order == BOND_TRIPLE)
         a_triple_cnt++;
      else if (order == BOND_ZERO)
         a_coord_cnt++;
   }

   ArrayOutput output(key);
   output.printf("%d%d%d%d%d%d%d%d%d%d%d%d%d%d", 
            a_num, a_val, a_chg, a_rad, a_iso, a_arom, a_lone, a_hcnt,
            a_conn, a_single_cnt, a_double_cnt, a_aromatic_cnt, a_triple_cnt, a_coord_cnt);
   output.writeChar(0);

   if ( (level == 0) && (fp.size() == 0) )
   {
      fp.copy(key);
   }
   else if ( (level == 0) && (fp.size() > 0) )
   {
      fp.appendString(key.ptr(), true);
   }
   else if (level > 0)
   {
      fp.copy(key);

      for (auto i : vertex.neighbors())
      {
	 bond.clear();
         ArrayOutput tmp(bond);
         n_key.clear();
         getAtomLocalFingerprint (mol, vertex.neiVertex(i), n_key, level - 1);
         if (n_key.size() == 0)
            continue;
         
         int order = mol.getBondOrder(vertex.neiEdge(i));
         tmp.printf(":%d:", order);
         tmp.writeChar(0);

         fp.appendString(bond.ptr(), true);
         fp.appendString(n_key.ptr(), true);
      }
   }
   return;
}

float MoleculePkaModel::_getAcidPkaValue (Molecule &mol, int idx, int level)
{
   QS_DEF(Array<char>, fp);

   fp.clear();
   getAtomLocalFingerprint (mol, idx, fp, level);
   float *ptr = _model.adv_a_pkas.at2(fp.ptr());
   if (ptr)
      return (*ptr);

   return 100.f;
}

float MoleculePkaModel::_getBasicPkaValue (Molecule &mol, int idx, int level)
{
   QS_DEF(Array<char>, fp);

   fp.clear();
   getAtomLocalFingerprint (mol, idx, fp, level);
   float *ptr = _model.adv_b_pkas.at2(fp.ptr());
   if (ptr)
      return (*ptr);

   return -100.f;
}


IMPL_ERROR(MoleculeIonizer, "Molecule Ionizer");

CP_DEF(MoleculeIonizer);
MoleculeIonizer::MoleculeIonizer():
CP_INIT{
}

bool MoleculeIonizer::ionize (Molecule &mol, float ph, float ph_toll, const IonizeOptions &options)
{
   QS_DEF(Array<int>, acid_sites);
   QS_DEF(Array<int>, basic_sites);
   QS_DEF(Array<float>, acid_pkas);
   QS_DEF(Array<float>, basic_pkas);

   acid_sites.clear();
   basic_sites.clear();
   acid_pkas.clear();
   basic_pkas.clear();

   MoleculePkaModel::estimate_pKa(mol, options, acid_sites, basic_sites, acid_pkas, basic_pkas);

   if (acid_sites.size() > 0 || basic_sites.size() > 0)
      _setCharges(mol, ph, ph_toll, options, acid_sites, basic_sites, acid_pkas, basic_pkas);

   return true;
}

void MoleculeIonizer::_setCharges (Molecule &mol, float pH, float pH_toll, const IonizeOptions &options, Array<int> &acid_sites,
                      Array<int> &basic_sites, Array<float> &acid_pkas, Array<float> &basic_pkas)
{
   for (auto i = 0; i < acid_sites.size(); i++)
   {
      if ((acid_pkas[i] - pH) < pH_toll)
      {
         mol.setAtomCharge(acid_sites[i], mol.getAtomCharge(acid_sites[i]) - 1);
//         printf("Acid site: atom indix = %d, pKa = %f\n",  acid_sites[i], acid_pkas[i]);
      }
   }

   for (auto i = 0; i < basic_sites.size(); i++)
   {
      if ((basic_pkas[i] - pH) > -pH_toll)
      {
         mol.setAtomCharge(basic_sites[i], mol.getAtomCharge(basic_sites[i]) + 1);
//         printf("Basic site: atom indix = %d, pKa = %f\n",  basic_sites[i], basic_pkas[i]);
      }
   }
}
