//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace indigo {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("indigo.resource", typeof(resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER {0}
        ///	ON {1}
        ///	FOR DELETE
        ///AS
        ///	declare @ID int;
        ///	declare Cur cursor LOCAL for select {2} from deleted;
        ///
        ///	open Cur
        ///
        ///	fetch next from Cur into @ID
        ///
        ///	while @@fetch_status = 0
        ///	begin
        ///		exec {3}._OnDeleteRecord &apos;{4}&apos;, @ID
        ///		
        ///		fetch next from Cur into @ID
        ///	end
        ///  close Cur
        ///  deallocate Cur
        ///.
        /// </summary>
        internal static string OnDeleteTrigger {
            get {
                return ResourceManager.GetString("OnDeleteTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER {0}
        ///	ON {1}
        ///	FOR INSERT
        ///AS
        ///	declare @ID int;
        ///	declare @data nvarchar(max);
        ///	declare Cur cursor LOCAL for select {2}, {3} from inserted;
        ///
        ///	open Cur
        ///
        ///	fetch next from Cur into @ID, @data
        ///
        ///	while @@fetch_status = 0
        ///	begin
        ///		exec {4}._OnInsertRecord &apos;{5}&apos;, @ID, @data
        ///		
        ///		fetch next from Cur into @ID, @data
        ///	end
        ///  close Cur
        ///  deallocate Cur
        ///.
        /// </summary>
        internal static string OnInsertTrigger {
            get {
                return ResourceManager.GetString("OnInsertTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER {0}
        ///	ON {1}
        ///	FOR UPDATE
        ///AS
        ///	declare @ID int;
        ///	declare @data nvarchar(max);
        ///	declare Cur cursor LOCAL for select {2}, {3} from inserted;
        ///
        ///	IF UPDATE({2}) 
        ///	BEGIN 
        ///		RAISERROR (&apos;{2} column cannot be changes after Bingo index created.&apos;, 16, 1);
        ///		ROLLBACK TRANSACTION
        ///	END
        ///	
        ///	IF NOT UPDATE({3}) 
        ///	BEGIN 
        ///		RETURN 
        ///	END
        ///	
        ///	open Cur
        ///
        ///	fetch next from Cur into @ID, @data
        ///
        ///	while @@fetch_status = 0
        ///	begin
        ///		exec {4}._OnDeleteRecord &apos;{5}&apos;, @ID
        ///		exec {4}._OnInsertRecord &apos;{5}&apos;, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OnUpdateTrigger {
            get {
                return ResourceManager.GetString("OnUpdateTrigger", resourceCulture);
            }
        }
    }
}
