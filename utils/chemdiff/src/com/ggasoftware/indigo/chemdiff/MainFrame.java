package com.ggasoftware.indigo.chemdiff;

import com.ggasoftware.indigo.*;
import com.ggasoftware.indigo.controls.IndigoEventListener;
import com.ggasoftware.indigo.controls.MolSaver;
import java.io.File;
import javax.swing.JOptionPane;
import java.net.*;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.UIManager;

public class MainFrame extends javax.swing.JFrame 
{
   CompareOptions compare_options;
   CanonicalCodeGenerator csmiles_generator;
   MolComparer mol_comparer;
   MolSaver mol_saver1;
   MolSaver mol_saver2;
   Indigo indigo1;
   Indigo indigo2;

   public static void setNativeLookAndFeel() {
      try {
         UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } catch (Exception e) {
         System.out.println("Error setting native LAF: " + e);
      }
   }

   public static String getPathToJarfileDir(Class classToUse) {
      String url = classToUse.getResource("/" + classToUse.getName().replaceAll("\\.", "/") + ".class").toString();
      url = url.substring(4).replaceFirst("/[^/]+\\.jar!.*$", "/");
      try {
         File dir = new File(new URL(url).toURI());
         url = dir.getAbsolutePath();
      } catch (MalformedURLException mue) {
         System.err.println(mue.getMessage());
         url = null;
      } catch (URISyntaxException ue) {
         System.err.println(ue.getMessage());
         url = null;
      }
      return url;
    }

   /** Creates new form MainFrame */
   public MainFrame()
   {
      IndigoRenderer indigo_renderer1;
      IndigoRenderer indigo_renderer2;
      
      String path = getPathToJarfileDir(MainFrame.class);
      indigo1 = new Indigo();
      indigo2 = new Indigo();

      indigo_renderer1 = new IndigoRenderer(indigo1);
      indigo_renderer2 = new IndigoRenderer(indigo2);

      indigo1.setOption("render-margins", "5,2");
      indigo2.setOption("render-margins", "5,2");

      initComponents();

      compare_options = new CompareOptions(aromatizer_check.getState(),
                                           cistrans_check.getState(),
                                           stereocenters_check.getState(),
                                           unseparate_charges_check.getState());
      csmiles_generator = new CanonicalCodeGenerator(indigo1, compare_options);

      mol_comparer = new MolComparer(csmiles_generator, true);

      in_table1.init(indigo1, indigo_renderer1, compare_options, 300, 150, false);
      in_table2.init(indigo2, indigo_renderer2, compare_options, 300, 150, false);
      out_table1.init(indigo1, indigo_renderer1, 200, 150, false);
      out_table2.init(indigo1, indigo_renderer1, 200, 150, false);
      out_table3.init(indigo2, indigo_renderer2, 200, 150, false);

      setTitle("ChemDiff");
   }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      tabbed_panel = new javax.swing.JTabbedPane();
      in_tab = new javax.swing.JPanel();
      action_panel = new javax.swing.JPanel();
      compare_button = new javax.swing.JButton();
      main_progress_bar = new javax.swing.JProgressBar();
      in_table2 = new com.ggasoftware.indigo.chemdiff.InputTable();
      in_table1 = new com.ggasoftware.indigo.chemdiff.InputTable();
      out_tab = new javax.swing.JPanel();
      out_table1 = new com.ggasoftware.indigo.chemdiff.OutputTable();
      out_table2 = new com.ggasoftware.indigo.chemdiff.OutputTable();
      out_table3 = new com.ggasoftware.indigo.chemdiff.OutputTable();
      main_menu_bar = new javax.swing.JMenuBar();
      menu_file = new javax.swing.JMenu();
      load_left_mi = new javax.swing.JMenuItem();
      load_right_mi = new javax.swing.JMenuItem();
      file_menu_separator = new javax.swing.JPopupMenu.Separator();
      exit_mi = new javax.swing.JMenuItem();
      menu_options = new javax.swing.JMenu();
      aromatizer_check = new javax.swing.JCheckBoxMenuItem();
      stereocenters_check = new javax.swing.JCheckBoxMenuItem();
      cistrans_check = new javax.swing.JCheckBoxMenuItem();
      save_same_check = new javax.swing.JCheckBoxMenuItem();
      unseparate_charges_check = new javax.swing.JCheckBoxMenuItem();
      menu_help = new javax.swing.JMenu();
      about_mi = new javax.swing.JMenuItem();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      tabbed_panel.setPreferredSize(new java.awt.Dimension(811, 910));

      in_tab.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
      in_tab.setPreferredSize(new java.awt.Dimension(660, 760));

      compare_button.setText("Compare");
      compare_button.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            compare_buttonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout action_panelLayout = new javax.swing.GroupLayout(action_panel);
      action_panel.setLayout(action_panelLayout);
      action_panelLayout.setHorizontalGroup(
         action_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, action_panelLayout.createSequentialGroup()
            .addComponent(main_progress_bar, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(compare_button, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
      );
      action_panelLayout.setVerticalGroup(
         action_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(main_progress_bar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
         .addComponent(compare_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
      );

      in_table2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
      in_table2.setName("Second File"); // NOI18N
      in_table2.setPreferredSize(new java.awt.Dimension(420, 533));

      javax.swing.GroupLayout in_table2Layout = new javax.swing.GroupLayout(in_table2);
      in_table2.setLayout(in_table2Layout);
      in_table2Layout.setHorizontalGroup(
         in_table2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 457, Short.MAX_VALUE)
      );
      in_table2Layout.setVerticalGroup(
         in_table2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 531, Short.MAX_VALUE)
      );

      in_table1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
      in_table1.setName("First File"); // NOI18N
      in_table1.setPreferredSize(new java.awt.Dimension(420, 533));

      javax.swing.GroupLayout in_table1Layout = new javax.swing.GroupLayout(in_table1);
      in_table1.setLayout(in_table1Layout);
      in_table1Layout.setHorizontalGroup(
         in_table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 447, Short.MAX_VALUE)
      );
      in_table1Layout.setVerticalGroup(
         in_table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 531, Short.MAX_VALUE)
      );

      javax.swing.GroupLayout in_tabLayout = new javax.swing.GroupLayout(in_tab);
      in_tab.setLayout(in_tabLayout);
      in_tabLayout.setHorizontalGroup(
         in_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(action_panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, in_tabLayout.createSequentialGroup()
            .addComponent(in_table1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(in_table2, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))
      );
      in_tabLayout.setVerticalGroup(
         in_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, in_tabLayout.createSequentialGroup()
            .addGroup(in_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(in_table1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(in_table2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(action_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      );

      tabbed_panel.addTab("input", in_tab);

      out_tab.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
      out_tab.setLayout(new java.awt.GridLayout(1, 0, 3, 3));

      out_table1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
      out_table1.setName("Coincident Molecules"); // NOI18N

      javax.swing.GroupLayout out_table1Layout = new javax.swing.GroupLayout(out_table1);
      out_table1.setLayout(out_table1Layout);
      out_table1Layout.setHorizontalGroup(
         out_table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 300, Short.MAX_VALUE)
      );
      out_table1Layout.setVerticalGroup(
         out_table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 569, Short.MAX_VALUE)
      );

      out_tab.add(out_table1);

      out_table2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
      out_table2.setName("Unique Molecules From the First File"); // NOI18N

      javax.swing.GroupLayout out_table2Layout = new javax.swing.GroupLayout(out_table2);
      out_table2.setLayout(out_table2Layout);
      out_table2Layout.setHorizontalGroup(
         out_table2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 300, Short.MAX_VALUE)
      );
      out_table2Layout.setVerticalGroup(
         out_table2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 569, Short.MAX_VALUE)
      );

      out_tab.add(out_table2);

      out_table3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
      out_table3.setName("Unique Molecules From the Second File"); // NOI18N

      javax.swing.GroupLayout out_table3Layout = new javax.swing.GroupLayout(out_table3);
      out_table3.setLayout(out_table3Layout);
      out_table3Layout.setHorizontalGroup(
         out_table3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 300, Short.MAX_VALUE)
      );
      out_table3Layout.setVerticalGroup(
         out_table3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 569, Short.MAX_VALUE)
      );

      out_tab.add(out_table3);

      tabbed_panel.addTab("output", out_tab);

      menu_file.setText("File");
      menu_file.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            load_secondActionPerformed(evt);
         }
      });

      load_left_mi.setText("Load first");
      load_left_mi.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            load_firstActionPerformed(evt);
         }
      });
      menu_file.add(load_left_mi);

      load_right_mi.setText("Load second");
      load_right_mi.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            load_secondActionPerformed(evt);
         }
      });
      menu_file.add(load_right_mi);
      menu_file.add(file_menu_separator);

      exit_mi.setText("Exit");
      exit_mi.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            exit_miActionPerformed(evt);
         }
      });
      menu_file.add(exit_mi);

      main_menu_bar.add(menu_file);

      menu_options.setText("Options");

      aromatizer_check.setSelected(true);
      aromatizer_check.setText("Aromatize molecules");
      aromatizer_check.addChangeListener(new javax.swing.event.ChangeListener() {
         public void stateChanged(javax.swing.event.ChangeEvent evt) {
            aromatizer_checkStateChanged(evt);
         }
      });
      menu_options.add(aromatizer_check);

      stereocenters_check.setText("Ignore stereocenters");
      stereocenters_check.addChangeListener(new javax.swing.event.ChangeListener() {
         public void stateChanged(javax.swing.event.ChangeEvent evt) {
            stereocenters_checkStateChanged(evt);
         }
      });
      menu_options.add(stereocenters_check);

      cistrans_check.setText("Ignore cis-trans bonds");
      cistrans_check.addChangeListener(new javax.swing.event.ChangeListener() {
         public void stateChanged(javax.swing.event.ChangeEvent evt) {
            cistrans_checkStateChanged(evt);
         }
      });
      menu_options.add(cistrans_check);

      save_same_check.setText("Save duplicate molecules");
      save_same_check.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
      menu_options.add(save_same_check);

      unseparate_charges_check.setSelected(true);
      unseparate_charges_check.setText("Unseparate charges");
      unseparate_charges_check.addChangeListener(new javax.swing.event.ChangeListener() {
         public void stateChanged(javax.swing.event.ChangeEvent evt) {
            unseparate_charges_checkStateChanged(evt);
         }
      });
      menu_options.add(unseparate_charges_check);

      main_menu_bar.add(menu_options);

      menu_help.setText("Help");

      about_mi.setText("About");
      about_mi.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            about_miActionPerformed(evt);
         }
      });
      menu_help.add(about_mi);

      main_menu_bar.add(menu_help);

      setJMenuBar(main_menu_bar);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(tabbed_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 929, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(tabbed_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    private void load_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_firstActionPerformed

    }//GEN-LAST:event_load_firstActionPerformed

    private void load_secondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_secondActionPerformed

    }//GEN-LAST:event_load_secondActionPerformed

    private void exit_miActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_miActionPerformed
       dispose();
    }//GEN-LAST:event_exit_miActionPerformed

    private void about_miActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_about_miActionPerformed
       JOptionPane msg_box = new JOptionPane();
       String msg = String.format("ChemDiff\nVersion %s\nCopyright (C) 2010-2011 GGA Software Services LLC",
               (new Indigo()).version());
       msg_box.showConfirmDialog(this, msg, "About", JOptionPane.DEFAULT_OPTION,
               JOptionPane.INFORMATION_MESSAGE, 
               new ImageIcon("images\\logo_small.png"));
    }//GEN-LAST:event_about_miActionPerformed

    private void compare_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compare_buttonActionPerformed
       try {
          compare_button.setEnabled(false);

          mol_comparer = new MolComparer(csmiles_generator, save_same_check.getState());

          mol_comparer.progress_event.addListener((new IndigoEventListener<Integer>()
          {
             public void handleEvent(Object source, Integer progress) {
                main_progress_bar.setValue(progress);
             }
          }));

          main_progress_bar.setMinimum(0);
          main_progress_bar.setMaximum(1000);
          main_progress_bar.setValue(0);
          main_progress_bar.setStringPainted(true);

          mol_comparer.setMols(in_table1.getMols(), 0);
          mol_comparer.setMols(in_table2.getMols(), 1);


          mol_comparer.finish_event.addListener(new CompareFinishEventListener());

          main_progress_bar.setString("Comparing structures...");

          mol_comparer.compare();
       } catch (Exception ex) {
          JOptionPane msg_box = new JOptionPane();
          msg_box.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
       }
}//GEN-LAST:event_compare_buttonActionPerformed

    private void aromatizer_checkStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_aromatizer_checkStateChanged
       compare_options.setAromFlag(aromatizer_check.getState());
    }//GEN-LAST:event_aromatizer_checkStateChanged

    private void stereocenters_checkStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stereocenters_checkStateChanged
       compare_options.setStereocentersIgnoreFlag(stereocenters_check.getState());
    }//GEN-LAST:event_stereocenters_checkStateChanged

    private void cistrans_checkStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cistrans_checkStateChanged
       compare_options.setCisTransIgnoreFlag(cistrans_check.getState());
    }//GEN-LAST:event_cistrans_checkStateChanged

    private void unseparate_charges_checkStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_unseparate_charges_checkStateChanged
       compare_options.setUnseparateChargesFlag(unseparate_charges_check.getState());
    }//GEN-LAST:event_unseparate_charges_checkStateChanged

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public class CompareFinishEventListener implements IndigoEventListener<Integer>
    {
       public void handleEvent(Object source, Integer stage)
       {
          if (stage == 0)
          {
             csmiles_generator.setIndigo(indigo1);
             main_progress_bar.setString("Canonical smiles calculating for set #1...");
          }
          else if (stage == 1)
          {
             csmiles_generator.setIndigo(indigo2);
             main_progress_bar.setString("Canonical smiles calculating for set #2...");
          }
          else if (stage == 2)
          {
             main_progress_bar.setString("Comparing molecules...");
          }
          else if(stage == 3)
          {
             ArrayList< ArrayList<Integer> > conc_indexes1 = mol_comparer.getIdxArrays(true, 0);
             ArrayList< ArrayList<Integer> > conc_indexes2 = mol_comparer.getIdxArrays(true, 1);
             ArrayList< ArrayList<Integer> > uniq_indexes1 = mol_comparer.getIdxArrays(false, 0);
             ArrayList< ArrayList<Integer> > uniq_indexes2 = mol_comparer.getIdxArrays(false, 1);

             ArrayList<RenderableMolData> conc_array = new ArrayList<RenderableMolData>();
             for (ArrayList<Integer> array : conc_indexes1)
                conc_array.add(in_table1.getMols().get(array.get(0)));

             ArrayList<RenderableMolData> uniq_array1 = new ArrayList<RenderableMolData>();
             for (ArrayList<Integer> array : uniq_indexes1)
                uniq_array1.add(in_table1.getMols().get(array.get(0)));

             ArrayList<RenderableMolData> uniq_array2 = new ArrayList<RenderableMolData>();
             for (ArrayList<Integer> array : uniq_indexes2)
                uniq_array2.add(in_table2.getMols().get(array.get(0)));

             out_table1.setMols(conc_array, conc_indexes1, conc_indexes2);
             out_table2.setMols(uniq_array1, uniq_indexes1, null);
             out_table3.setMols(uniq_array2, uniq_indexes2, null);
             tabbed_panel.setSelectedIndex(1);
             compare_button.setEnabled(true);
          }
       }
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JMenuItem about_mi;
   private javax.swing.JPanel action_panel;
   private javax.swing.JCheckBoxMenuItem aromatizer_check;
   private javax.swing.JCheckBoxMenuItem cistrans_check;
   private javax.swing.JButton compare_button;
   private javax.swing.JMenuItem exit_mi;
   private javax.swing.JPopupMenu.Separator file_menu_separator;
   private javax.swing.JPanel in_tab;
   private com.ggasoftware.indigo.chemdiff.InputTable in_table1;
   private com.ggasoftware.indigo.chemdiff.InputTable in_table2;
   private javax.swing.JMenuItem load_left_mi;
   private javax.swing.JMenuItem load_right_mi;
   private javax.swing.JMenuBar main_menu_bar;
   private javax.swing.JProgressBar main_progress_bar;
   private javax.swing.JMenu menu_file;
   private javax.swing.JMenu menu_help;
   private javax.swing.JMenu menu_options;
   private javax.swing.JPanel out_tab;
   private com.ggasoftware.indigo.chemdiff.OutputTable out_table1;
   private com.ggasoftware.indigo.chemdiff.OutputTable out_table2;
   private com.ggasoftware.indigo.chemdiff.OutputTable out_table3;
   private javax.swing.JCheckBoxMenuItem save_same_check;
   private javax.swing.JCheckBoxMenuItem stereocenters_check;
   private javax.swing.JTabbedPane tabbed_panel;
   private javax.swing.JCheckBoxMenuItem unseparate_charges_check;
   // End of variables declaration//GEN-END:variables
}
